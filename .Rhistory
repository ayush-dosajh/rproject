getwd()
ghg <- read.csv("GHG.csv" , sep = ",")
summary(ghg)
ghg <- read.csv("GHG.csv" , sep = ",")
summary(ghg)
ghg <- read.csv("GHG.csv" , sep = ",")
summary(ghg)
library(RColorBrewer)
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
library(ggplot2)
names(ghg)
qplot(x=TotalGHG , data = ghg)
qplot(x=TotalGHG , data = ghg)+
scale_x_continuous(limits = c(0,1000) , breaks = (0,1000,100))
qplot(x=TotalGHG , data = ghg)+
scale_x_continuous(limits = c(0,1000) , breaks = seq(0,1000,100))
names(ghg)
qplot(x=TotalGHG , data = ghg , color= Year )+
scale_x_continuous(limits = c(0,1000) , breaks = seq(0,1000,100))
qplot(x=TotalGHG , data = ghg ,  )+
scale_x_continuous(limits = c(0,1000) , breaks = seq(0,1000,100))+
facet_wrap(~year)
qplot(x=TotalGHG , data = ghg ,  )+
scale_x_continuous(limits = c(0,1000) , breaks = seq(0,1000,100))+
facet_wrap(~Year)
qplot(x=TotalGHG , data = ghg ,xlab = 'NumberOfCountries'  )+
scale_x_continuous(limits = c(0,1000) , breaks = seq(0,1000,100))+
facet_wrap(~Year)
qplot(x=TotalGHG , data = ghg ,ylab = 'NumberOfCountries'  )+
scale_x_continuous(limits = c(0,1000) , breaks = seq(0,1000,100))+
facet_wrap(~Year)
names(ghg)
qplot(x=TotalGHG , data = ghg ,ylab = 'Year'  )+
scale_x_continuous(limits = c(0,1000) , breaks = seq(0,1000,100))+
facet_wrap(~Country)
qplot(x=TotalGHG ,data = ghg)
qplot(x=TotalGHG ,data = ghg) +
scale_x_continuous(limits = c(0,1000) , breaks = seq(0,1000,100))
#produces histograms of count(here no. countries with GHG Emmision for each year seperatly)
qplot(x=TotalGHG , data = ghg ,ylab = 'NumberOfCountries'  )+
scale_x_continuous(limits = c(0,1000) , breaks = seq(0,1000,100))+
facet_wrap(~Year)
#produces histograms of count(here no. countries with GHG Emmision for each year seperatly)
qplot(x=TotalGHG , data = ghg ,ylab = 'NumberOfCountries'  )+
scale_x_continuous(limits = c(100,1000) , breaks = seq(100,1000,100))+
facet_wrap(~Year)
#produces histograms of count(here no. countries with GHG Emmision for each year seperatly)
qplot(x=TotalGHG , data = ghg ,ylab = 'NumberOfCountries'  )+
scale_x_continuous(limits = c(100,1000) , breaks = seq(100,1000,1))+
facet_wrap(~Year)
#produces histograms of count(here no. countries with GHG Emmision for each year seperatly)
qplot(x=TotalGHG , data = ghg ,ylab = 'NumberOfCountries'  )+
scale_x_continuous(limits = c(100,1000) , breaks = seq(100,1000,100))+
facet_wrap(~Year)
#produces histograms of count(here no. countries with GHG Emmision for each year seperatly)
qplot(x=TotalGHG , data = ghg ,ylab = 'NumberOfCountries'  )+
scale_x_continuous(limits = c(100,1000) , breaks = seq(100,1000,100))+
geom_point()+
facet_wrap(~Year)
#produces histograms of count(here no. countries with GHG Emmision for each year seperatly)
qplot(x=Year , y= TotalGHG  , data = ghg ,ylab = 'NumberOfCountries'  )+
scale_x_continuous(limits = c(100,1000) , breaks = seq(100,1000,100))+
geom_point()
#produces histograms of count(here no. countries with GHG Emmision for each year seperatly)
qplot(x=TotalGHG , data = ghg ,ylab = 'NumberOfCountries' , geom = 'line'  )+
scale_x_continuous(limits = c(100,1000) , breaks = seq(100,1000,100))+
facet_wrap(~Year)
names(ghg)
qplot(x=Total.CH4..MtCO2e , data = ghg ,ylab = 'NumberOfCountries'  )+
scale_x_continuous(limits = c(100,1000) , breaks = seq(100,1000,100))+
facet_wrap(~Year)
qplot(x=Total.CH4..MtCO2e. , data = ghg ,ylab = 'NumberOfCountries'  )+
scale_x_continuous(limits = c(100,1000) , breaks = seq(100,1000,100))+
facet_wrap(~Year)
# A simple histogram dipicting TotalGHG distribution (it shows that most of the countries over the year has very less emmision also that there are more emission by certain coutries over the year other than this not much can be drawn out)
qplot(x=TotalGHG ,data = ghg) +
scale_x_continuous(limits = c(0,1000) , breaks = seq(0,1000,100))
# A simple histogram dipicting TotalGHG distribution (it shows that most of the countries over the year has very less emmision also that there are more emission by certain coutries over the year other than this not much can be drawn out)
qplot(x=TotalGHG ,data = ghg) +
scale_x_continuous(limits = c(0,1000) , breaks = seq(0,1000,100)) +
scale_x_log10()
#log trans for normal distribution
qplot(x=TotalGHG ,data = ghg) +
scale_x_continuous(limits = c(0,1000) , breaks = seq(0,1000,100))+
scale_x_log10()
library(RColorBrewer)
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
library(gridExtra)
library(tseries)
library(forecast)
#Arima time series
sub1 <-subset(ghg,ghg$Country == 'India' )
subt <- subset(sub1,select = c( 'Year' ) )
sub <- ts(subset(sub1,select = c('TotalGHG'  ) ))
subt$ghg_ma5 <- ma(subt$cleanTghg, order=5) #ma= moving average   5 years
View(subt)
subt$cleanTghg <- tsclean(sub)
subt$ghg_ma5 <- ma(subt$cleanTghg, order=5) #ma= moving average   5 years
subt$ghg_ma10 <- ma(subt$cleanTghg, order=10)# ma  decade
ggplot() +
geom_line(data = subt, aes(x = Year, y =cleanTghg , colour = "Totalghg")) +
geom_line(data = subt, aes(x = Year, y = subt$ghg_ma5,   colour = "Moving Average for 5 years"))  +
geom_line(data = subt, aes(x = Year, y = subt$ghg_ma5, colour = " Moving Average for 10 years"))  +
ylab('GHG ')  #not much variation is seen here
tghg_ma <- ts(na.omit(subt$ghg_ma5), frequency=5)
decomp = stl(tghg_ma, s.window="periodic" ,)
deseasonal_cnt <- seasadj(decomp)
plot(decomp)
adf.test(tghg_ma, alternative = "stationary")
Acf(tghg_ma, main='')
Pacf(tghg_ma, main='')
d1 = diff(deseasonal_cnt, differences = 1)
plot(d1)
adf.test(count_d1, alternative = "stationary")
adf.test(d1, alternative = "stationary")
#IS STATIONANY
#ACF PACF FOR DIFFRENCED
Acf(d1, main='ACF for Differenced Series')
Pacf(d1, main='PACF for Differenced Series')
deseasonal_ghg <- seasadj(decomp)
m1 <- auto.arima(deseasonal_ghg, seasonal=FALSE)
m1
Acf(tghg_ma, main='')
tsdisplay(residuals(m1), lag.max=45, main='(0,2,0) Model Residuals')
tsdisplay(residuals(m1), lag.max=10, main='(0,2,0) Model Residuals')
library(tseries)
#model is ok because no major corelation can be seen from ACF andPACF checking for '6'
m2 <- arima(deseasonal_cnt, order=c(1,1,6))
m2
tsdisplay(residuals(m2), lag.max=15, main='Seasonal Model Residuals')
#model is ok because no major corelation can be seen from ACF andPACF checking for '6'
m2 <- arima(deseasonal_cnt, order=c(1,1,6))
tsdisplay(residuals(m2), lag.max=10, main='Seasonal Model Residuals')
library(tseries)
#model is ok because no major corelation can be seen from ACF andPACF checking for '6'
m2 <- arima(deseasonal_cnt, order=c(1,1,6))
tsdisplay(residuals(m2), lag.max=10, main='Seasonal Model Residuals')
fcast <- forecast(m2, h=5)
plot(fcast)
fcast <- forecast(m2, h=10)
plot(fcast)
fcast <- forecast(m2, h=5)
plot(fcast)
fcast <- forecast(m2, h=30)
plot(fcast)
fcast <- forecast(m2, h=10)
fcast <- forecast(m2, h=10)
plot(fcast)
hold <- window(ts(deseasonal_ghg), start=700)
fit_no_holdout = arima(ts(deseasonal_cnt[-c(700:725)]), order=c(1,1,7))
hold <- window(ts(deseasonal_ghg), start=10)
hold <- window(ts(deseasonal_ghg), start=10)
fit_no_holdout = arima(ts(deseasonal_cnt[-c(700:725)]), order=c(1,1,7))
fcast_no_holdout <- forecast(fit_no_holdout,h=25)
plot(fcast_no_holdout, main=" ")
lines(ts(deseasonal_ghg))
plot(fcast_no_holdout, main=" ")
lines(ts(deseasonal_ghg))
fcast_no_holdout <- forecast(fit_no_holdout,h=15)
plot(fcast_no_holdout, main=" ")
lines(ts(deseasonal_ghg))
fit_w_seasonality = auto.arima(deseasonal_ghg, seasonal=TRUE)
fit_w_seasonality
seas_fcast <- forecast(fit_w_seasonality, h=30)
plot(seas_fcast)
acf(seas_fcast)
acf(ts(seas_fcast))
plot(fcast_no_holdout, main=" ")
lines(ts(deseasonal_ghg))
